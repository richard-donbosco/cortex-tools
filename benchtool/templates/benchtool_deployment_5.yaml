{{- range .Values.benchtool }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-{{ .name }}
  labels:
    app: benchtool
  annotations:
    release: "{{ .deployment.release | default "1" }}"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 5
  selector:
    matchLabels:
      app: benchtool
  template:
    metadata:
      labels:
        app: benchtool
      annotations:
        release: "{{ .deployment.release | default 1 }}"
    spec:
      securityContext:
        fsGroup: 2000
      containers:
        - name: benchtool
          image: docker.apple.com/csperf/cortex/benchtool:5.0
          imagePullPolicy: Always
          ports:
            - containerPort: 9090 
          envFrom:
            - configMapRef:
                name: {{ $.Release.Name }}-cmdline-{{ .name }}
          args:
            - "-bench.id=$(BENCH_ID)"
            - "-bench.instance-name=$(BENCH_INSTANCE_NAME)"
            - "-bench.query.enabled=$(BENCH_QUERY_ENABLED)"
            - "-bench.query.endpoint=$(BENCH_QUERY_ENDPOINT)"
            - "-bench.write.enabled=$(BENCH_WRITE_ENABLED)"
            - "-bench.write.endpoint=$(BENCH_WRITE_ENDPOINT)"
            - "-bench.workload-file-path=/etc/benchtool"
          resources:
            requests:
              memory: {{ .deployment.resources.requests.memory | default "500Mi" }} 
              cpu: {{ .deployment.resources.requests.cpu | default "1" }}
            limits:
              memory: {{ .deployment.resources.limits.memory | default "1Gi" }} 
              cpu: {{ .deployment.resources.limits.cpu | default "2" }}
          # livenessProbe:
          #   httpGet:
          #     path: /metrics
          #     port: 80
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: /metrics
          #     port: 80
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          #   successThreshold: 2
          volumeMounts:
            - name: logs
              mountPath: /var/log/benchtool
            - name: workflow-config
              mountPath: /etc/benchtool
              subPath: workflow.yaml
          securityContext:
            runAsUser: 0
            # runAsGroup: 2000
            # allowPrivilegeEscalation: false
            # readOnlyRootFilesystem: true
      volumes:
        - name: logs
          emptyDir:
            medium: Memory
        - name: workflow-config
          configMap:
            name: {{ $.Release.Name }}-workflow-{{ .name }}
            items:
              - key: workflow.yaml
                path: workflow.yaml
      imagePullSecrets:
        - name: docker-apple-com
      # nodeSelector:
        # disktype: ssd
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: app
      #               operator: In
      #               values:
      #                 - benchtool
      #         topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "benchtool"
          effect: "NoSchedule"
      terminationGracePeriodSeconds: 30
{{- end -}}
